{"version":3,"file":"styles.css","sources":["styles.scss","utilities/_variables.scss","utilities/_mixins.scss","utilities/_sprites.scss","layout/_layout.scss"],"sourcesContent":["\r\n@import \"utilities/variables\";\r\n@import \"utilities/mixins\";\r\n@import \"utilities/sprites\";\r\n\r\n\r\n@import \"layout/layout\";\r\n","$base-font-size:   62.5%;\r\n$base-line-height: 1.4 !default;\r\n\r\n\r\n// colours\r\n\r\n$white: #ffffff;\r\n$dark-grey: #333333;\r\n","\r\n// get-sprite.sass\r\n// sprite mixin that can be used to include a sprite into media queries\r\n// @include get-sprite($map, $sprite, $height, $width, $offset-x, $offset-y, $repeat);\r\n// $map is the name of the sprite map, this is auto-generated as a global\r\n// sass var when you do a (for instance) @import \"sprites-x2/*.png\"\r\n// ----------\r\n// Example: @include get-sprite($sprites-x2-sprites, logo, false, false);\r\n//\r\n\r\n@mixin get-sprite($map, $sprite, $height: true, $width: true, $offset-x: 0, $offset-y: 0, $repeat: no-repeat) {\r\n//http://compass-style.org/reference/compass/helpers/sprites/#sprite-file\r\n$sprite-image: sprite-file($map, $sprite);\r\n\r\n// http://compass-style.org/reference/compass/helpers/sprites/#sprite-url\r\n$sprite-map: sprite-url($map);\r\n\r\n// http://compass-style.org/reference/compass/helpers/sprites/#sprite-position\r\n$sprite-position: sprite-position($map, $sprite, $offset-x, $offset-y);\r\n\r\n// Returns background\r\nbackground: $sprite-map $sprite-position $repeat;\r\n\r\n// http://compass-style.org/reference/compass/helpers/image-dimensions/\r\n// Checks to see if the user wants height returned\r\n@if $height == true {\r\n    // Gets the height of the sprite-image\r\n    $sprite-height: image-height($sprite-image);\r\n    // Returns the height\r\n    height: $sprite-height;\r\n}\r\n\r\n// http://compass-style.org/reference/compass/helpers/image-dimensions/\r\n// Checks to see if the user wants height returned\r\n@if $width == true {\r\n    // Gets the width of the sprite-image\r\n    $sprite-width: image-width($sprite-image);\r\n    // Returns the width\r\n    width: $sprite-width; }\r\n}\r\n","$svg-sprite: (\n  sprite: (\n    width: 154px,\n    height: 82px,\n    padding: (\n      top: 20px,\n      right: 20px,\n      bottom: 20px,\n      left: 20px\n    ),\n    pngPath: '../../images/sprites/sprite.png',\n    svgPath: '../../images/sprites/sprite.svg'\n  ),\n\n  icon-close: (\n    width: 27px,\n    height: 27px,\n    backgroundX: 0px,\n    backgroundY: 0px\n  ),\n  icon-menu: (\n    width: 47px,\n    height: 42px,\n    backgroundX: -67px,\n    backgroundY: 0px\n  ),\n);\n\n\n// the $svg-sprite var is generated by the gulp-svg-sprites module\n// and is a sass map containing all the svg sprite info.\n$sprite: map-get($svg-sprite, sprite) !default;\n$sprite-padding: map-get($sprite, padding);\n$pngSpriteClass: '.no-svg';\n\n// function for merging sass maps\n@function extend($map, $ext-map) {\n  @return map-merge($map, $ext-map);\n}\n\n// Gets an attribute from the sass map\n@function sprite-attr($icon, $attr) {\n  $icon: map-get($svg-sprite, $icon);\n  @return map-get($icon, $attr);\n}\n\n// retrieve the icons attributes\n@function icon-attr($icon) {\n  $attr: (\n    width: sprite-attr($icon, width),\n    height: sprite-attr($icon, height),\n    x: (sprite-attr($icon, backgroundX) - map-get($sprite-padding, left)),\n    y: (sprite-attr($icon, backgroundY) - map-get($sprite-padding, top))\n  );\n\n  @return $attr;\n}\n\n\n// For use with the gulp sprite plugin\n@mixin sprite($icon, $conf: ()) {\n  $conf: extend((\n    type: all,\n    offset-x: 0,\n    offset-y: 0,\n  ), $conf);\n\n  $iconAttr: icon-attr($icon);\n  $type: map-get($conf, type);\n  $widthRatio: 1;\n  $heightRatio: 1;\n\n  // Outputs dimensions\n  @if $type == all or $type == size {\n    @if map-get($conf, width) {\n      width: map-get($conf, width)\n    }\n    @else {\n      width: map-get($iconAttr, width);\n    }\n\n    @if map-get($conf, height) {\n      height: map-get($conf, height)\n    }\n    @else {\n      height: map-get($iconAttr, height);\n    }\n  }\n\n  // Outputs background position\n  @if $type == all or $type == bg {\n    @if map-get($conf, width) {\n      $widthRatio: map-get($conf, width) / map-get($iconAttr, width);\n    }\n    @if map-get($conf, height) {\n      $heightRatio: map-get($conf, height) / map-get($iconAttr, height);\n    }\n\n    $pos-x: (map-get($iconAttr, x) + map-get($conf, offset-x)) * $widthRatio;\n    $pos-y: (map-get($iconAttr, y) + map-get($conf, offset-y)) * $heightRatio;\n\n    background-position: $pos-x $pos-y;\n  }\n\n  // Outputs background size and image\n  //@if not $type == size {\n    // compare that ratio difference between the desired size and the actual size,\n    // then apply this ratio to the background size\n    background-size: (map-get($sprite, width) * $widthRatio)  (map-get($sprite, height) * $heightRatio);\n    background-image: url(map-get($sprite, svgPath));\n\n    //with png fallback\n    @if $pngSpriteClass {\n      @if not($type == size) {\n        #{$pngSpriteClass} & {\n          background-image: url(map-get($sprite, pngPath));\n        }\n      }\n    }\n  //}\n}\n\n","body {\r\n    background: #f3f3f3;\r\n    overflow-x: hidden;\r\n    background-image: url('https://crepuscularrambling.files.wordpress.com/2013/06/dsc00452.jpg');\r\n    background-size: cover;\r\n    height: 100vh;\r\n    width: 100%;\r\n    padding: 0;\r\n    margin: 0;\r\n    font-family: 'Titillium Web', Helvetica, Arial, sans-serif !important;\r\n    color: $dark-grey;\r\n    overflow: hidden\r\n}\r\n// main container\r\n.container {\r\n  opacity: 0;\r\n  transition: all ease 2s;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  @media (min-width: 600px) {\r\n    width: 400px;\r\n    transition: all ease 1.5s;\r\n    position: relative;\r\n    top: 50%;\r\n    transform: translateY(-70%);\r\n    &.is-active {\r\n      top: 5%;\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n}\r\n.icon--umbrella {\r\n  position: relative;\r\n  display: block;\r\n  width: 80px;\r\n  margin: 0 auto;\r\n}\r\nh1 {\r\n  font-size: 3em;\r\n  text-align: center;\r\n  color: $white;\r\n  margin: 0 0 30px;\r\n  position: relative;\r\n}\r\n\r\np {\r\n  text-align: center;\r\n  color: $white;\r\n  padding: 0;\r\n  margin: 20px 0;\r\n}\r\n\r\n// Form styling\r\n.location-form-wrapper {\r\n    position: relative;\r\n    display: block;\r\n    width: 100%;\r\n    height: 40px;\r\n    margin: 0 auto;\r\n    padding: 10px 0 0;\r\n    background: $white;\r\n}\r\n.location-form {\r\n  position: relative;\r\n}\r\n.get-location {\r\n  padding: 0;\r\n  font-size: 1.2em;\r\n  color: $dark-grey;\r\n  width: 90%;\r\n  border: 0;\r\n  outline: none;\r\n  background: none;\r\n  text-align: center;\r\n  &:focus {\r\n    border: 0;\r\n  }\r\n}\r\n\r\ninput {\r\n  font-family: 'Titillium Web', Helvetica, Arial, sans-serif !important;\r\n}\r\n\r\n// input placeholder\r\n::-webkit-input-placeholder {\r\n  color: $dark-grey;\r\n  font-size: 1em\r\n}\r\n::-moz-placeholder {\r\n  color: $dark-grey;\r\n}\r\n:-ms-input-placeholder {\r\n  color: $dark-grey;\r\n}\r\ninput:focus::-webkit-input-placeholder {\r\n    color: transparent;\r\n}\r\ninput:focus::-moz-input-placeholder {\r\n    color: transparent;\r\n}\r\ninput:focus::-moz-input-placeholder  {\r\n    color: transparent;\r\n}\r\n\r\n// submit button\r\n.submit-location {\r\n  position: absolute;\r\n  right: 0;\r\n  top: -10px;\r\n  height: 50px;\r\n  border: 0;\r\n  background: $dark-grey;\r\n  color: $white;\r\n  text-transform: uppercase;\r\n  padding: 0 10px;\r\n  font-weight: 700;\r\n  font-size: 0.9em;\r\n  cursor: pointer;\r\n  transition: all ease 1s;\r\n  &:hover {\r\n    background: lighten($dark-grey, 10%)\r\n  }\r\n}\r\n\r\n.weather-results {\r\n  margin-top: 40px;\r\n  padding: 30px;\r\n  background: white;\r\n  opacity: 0;\r\n  transition: all ease 2s;\r\n  display: none;\r\n  &.is-visible {\r\n    // display: block;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n// Weather icons\r\n.weather-results__icon {\r\n  width: 200px;\r\n  height: 200px;\r\n  position: relative;\r\n  &:before {\r\n    position: absolute;\r\n    display: block;\r\n    height: 200px;\r\n    width: 200px;\r\n    background: $white;\r\n    opacity: 0.8;\r\n  }\r\n}\r\n\r\n.icon--clear-day {\r\n  background: url(\"/images/clear-day.svg\");\r\n}\r\n.icon--clear-night {\r\n  background: url(\"/images/clear-night.svg\");\r\n}\r\n.icon--few-clouds-day {\r\n  background: url(\"/images/few-clouds-day.svg\");\r\n}\r\n.icon--few-clouds-night {\r\n  background: url(\"/images/few-clouds-night.svg\");\r\n}\r\n.icon--scattered-day {\r\n  background: url(\"/images/scattered-day.svg\");\r\n}\r\n.icon--scattered-night {\r\n  background: url(\"/images/scattered-night.svg\");\r\n}\r\n.icon--broken-clouds {\r\n  background: url(\"/images/broken-clouds.svg\");\r\n}\r\n.icon--showers-day {\r\n  background: url(\"/images/showers-day.svg\");\r\n}\r\n.icon--showers-night {\r\n  background: url(\"/images/showers-night.svg\");\r\n}\r\n.icon--rain {\r\n  background: url(\"/images/rain.svg\");\r\n}\r\n.icon--thunderstorm {\r\n  background: url(\"/images/thunderstorm.svg\");\r\n}\r\n.icon--snow {\r\n  background: url(\"/images/snow.svg\");\r\n}\r\n.icon--fog-day {\r\n  background: url(\"/images/fog-day.svg\");\r\n}\r\n.icon--fog-night {\r\n  background: url(\"/images/fog-night.svg\");\r\n}\r\n"],"mappings":"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","names":[],"sourceRoot":"/source/"}